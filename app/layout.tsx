import type { Metadata } from 'next';
import { Geist, Geist_Mono } from 'next/font/google';
import './globals.css';
import StoreProvider from '@Src/app/providers/StoreProvider';
import ReactQueryProvider from '@Src/app/providers/ReactQueryProvider';
import NextAuthProvider from '@Src/app/providers/NextAuthProvider';
import { getServerSession } from 'next-auth';
import nextAuthOptions from '@Src/app/config/next-auth';
import AuthProvider from '@Src/app/providers/AuthProvider';
import MockServerInit from '@Src/app/inits/MockServerInit';
import '@Src/shared/libs/mocks/server';

const geistSans = Geist({
  variable: '--font-geist-sans',
  subsets: ['latin'],
});

const geistMono = Geist_Mono({
  variable: '--font-geist-mono',
  subsets: ['latin'],
});

export const metadata: Metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app',
};

export default async function RootLayout({
  children,
  authModal,
}: Readonly<{
  children: React.ReactNode;
  authModal: React.ReactNode;
}>) {
  const session = await getServerSession(nextAuthOptions);

  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <StoreProvider>
          <ReactQueryProvider>
            <NextAuthProvider session={session}>
              <AuthProvider>
                <MockServerInit>
                  {children}
                  {authModal}
                </MockServerInit>
              </AuthProvider>
            </NextAuthProvider>
          </ReactQueryProvider>
        </StoreProvider>
      </body>
    </html>
  );
}
